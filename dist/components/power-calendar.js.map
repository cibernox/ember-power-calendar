{"version":3,"file":"power-calendar.js","sources":["../../src/components/power-calendar.ts"],"sourcesContent":["import Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { guidFor } from '@ember/object/internals';\nimport service from '../-private/service.ts';\nimport { task, type TaskInstance } from 'ember-concurrency';\nimport { assert } from '@ember/debug';\nimport type { ComponentLike } from '@glint/template';\nimport {\n  normalizeDate,\n  normalizeCalendarValue,\n  type NormalizeCalendarValue,\n  type PowerCalendarDay,\n  type SelectedPowerCalendarRange,\n} from '../utils.ts';\nimport PowerCalendarNavComponent, {\n  type PowerCalendarNavSignature,\n} from './power-calendar/nav.ts';\nimport PowerCalendarDaysComponent, {\n  type PowerCalendarDaysSignature,\n} from './power-calendar/days.ts';\nimport type Owner from '@ember/owner';\nimport type PowerCalendarService from '../services/power-calendar.ts';\nimport type {\n  PowerCalendarRangeAPI,\n  PowerCalendarRangeDay,\n} from './power-calendar-range.ts';\nimport type { PowerCalendarMultipleAPI } from './power-calendar-multiple.ts';\nimport { publicActionsObject } from '../-private/utils.ts';\n\nexport type TCalendarType = 'multiple' | 'range' | 'single';\nexport type TPowerCalendarMoveCenterUnit = 'year' | 'month';\nexport type SelectedDays =\n  | SelectedPowerCalendarRange\n  | Date\n  | Date[]\n  | undefined;\nexport type CalendarAPI =\n  | PowerCalendarAPI\n  | PowerCalendarMultipleAPI\n  | PowerCalendarRangeAPI;\n\nexport interface PowerCalendarAPI {\n  uniqueId: string;\n  calendarUniqueId?: string;\n  selected?: SelectedDays;\n  loading: boolean;\n  center: Date;\n  locale: string;\n  type: TCalendarType;\n  actions: PowerCalendarActions;\n}\n\nexport interface PowerCalendarActions {\n  changeCenter?: (\n    newCenter: Date,\n    calendar: CalendarAPI,\n    event: MouseEvent,\n  ) => TaskInstance<void>;\n  moveCenter?: (\n    step: number,\n    unit: TPowerCalendarMoveCenterUnit,\n    calendar: PowerCalendarAPI,\n    event: MouseEvent | KeyboardEvent,\n  ) => Promise<void>;\n  select?: (day: CalendarDay, calendar: CalendarAPI, event: MouseEvent) => void;\n}\n\nexport type TPowerCalendarOnSelect = (\n  day: CalendarDay,\n  calendar: CalendarAPI,\n  event: MouseEvent,\n) => void;\n\nexport interface PowerCalendarArgs {\n  daysComponent?: string | ComponentLike<PowerCalendarDaysSignature>;\n  locale?: string;\n  navComponent?: string | ComponentLike<PowerCalendarNavSignature>;\n  onCenterChange?: (\n    newCenter: NormalizeCalendarValue,\n    calendar: PowerCalendarAPI,\n    event: MouseEvent,\n  ) => Promise<void> | void;\n  onInit?: (calendar: PowerCalendarAPI) => void;\n  onSelect?: TPowerCalendarOnSelect;\n  selected?: SelectedDays;\n  center?: Date;\n  tag?: string;\n  ariaLabel?: boolean;\n  ariaLabeledBy?: boolean;\n  isDatePicker?: boolean;\n  autofocus?: boolean;\n}\n\nexport interface PowerCalendarDefaultBlock extends PowerCalendarAPI {\n  Nav: ComponentLike<{\n    Args: Omit<PowerCalendarNavSignature['Args'], 'calendar'>;\n    Blocks: PowerCalendarNavSignature['Blocks'];\n  }>;\n  Days: ComponentLike<{\n    Element: PowerCalendarDaysSignature['Element'];\n    Args: Omit<PowerCalendarDaysSignature['Args'], 'calendar'>;\n    Blocks: PowerCalendarDaysSignature['Blocks'];\n  }>;\n}\n\nexport type CalendarDay =\n  | PowerCalendarDay\n  | PowerCalendarRangeDay\n  | PowerCalendarDay[];\n\nexport interface PowerCalendarSignature {\n  Element: HTMLElement;\n  Args: PowerCalendarArgs;\n  Blocks: {\n    default: [PowerCalendarDefaultBlock];\n  };\n}\n\nexport default class PowerCalendarComponent extends Component<PowerCalendarSignature> {\n  @service declare powerCalendar: PowerCalendarService;\n\n  @tracked center = null;\n  @tracked _calendarType: TCalendarType = 'single';\n  @tracked _selected?: SelectedDays;\n\n  navComponent = PowerCalendarNavComponent;\n  daysComponent = PowerCalendarDaysComponent;\n\n  // Lifecycle hooks\n  constructor(owner: Owner, args: PowerCalendarArgs) {\n    super(owner, args);\n    this.registerCalendar();\n    if (this.args.onInit) {\n      this.args.onInit(this.publicAPI);\n    }\n  }\n\n  willDestroy(): void {\n    super.willDestroy();\n    this.unregisterCalendar();\n  }\n\n  get publicActions(): PowerCalendarActions {\n    return publicActionsObject(\n      this.args.onSelect,\n      this.select.bind(this),\n      this.args.onCenterChange,\n      this.changeCenterTask,\n      this.currentCenter,\n    );\n  }\n\n  get selected(): SelectedDays {\n    if (this._selected) {\n      return this._selected;\n    }\n\n    return normalizeDate(this.args.selected as Date);\n  }\n\n  set selected(v: SelectedDays) {\n    this._selected = normalizeDate(v as Date | undefined);\n  }\n\n  get currentCenter(): Date {\n    let center = this.args.center;\n    if (!center) {\n      center = (this.selected as Date) || this.powerCalendar.getDate();\n    }\n    return normalizeDate(center) || this.powerCalendar.getDate();\n  }\n\n  get publicAPI(): PowerCalendarAPI {\n    return this._publicAPI;\n  }\n\n  get _publicAPI(): PowerCalendarAPI {\n    return {\n      uniqueId: guidFor(this),\n      type: this._calendarType,\n      selected: this.selected,\n      loading: this.changeCenterTask.isRunning,\n      center: this.currentCenter,\n      locale: this.args.locale || this.powerCalendar.locale,\n      actions: this.publicActions,\n    };\n  }\n\n  get tagWithDefault(): string {\n    if (this.args.tag === undefined || this.args.tag === null) {\n      return 'div';\n    }\n    return this.args.tag;\n  }\n\n  // Tasks\n  changeCenterTask = task(\n    async (newCenter: Date, calendar: PowerCalendarAPI, e: MouseEvent) => {\n      assert(\n        \"You attempted to move the center of a calendar that doesn't receive an `@onCenterChange` action.\",\n        typeof this.args.onCenterChange === 'function',\n      );\n      const value = normalizeCalendarValue({ date: newCenter });\n      await this.args.onCenterChange(value, calendar, e);\n    },\n  );\n\n  // Actions\n  @action\n  select(day: CalendarDay, calendar: PowerCalendarAPI, e: MouseEvent) {\n    if (this.args.onSelect) {\n      this.args.onSelect(day, calendar, e);\n    }\n  }\n\n  // Methods\n  registerCalendar() {\n    if (window) {\n      // @ts-expect-error Property '__powerCalendars'\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      window.__powerCalendars = window.__powerCalendars || {}; // TODO: weakmap??\n      // @ts-expect-error Property '__powerCalendars'\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      window.__powerCalendars[this.publicAPI.uniqueId] = this;\n    }\n  }\n\n  unregisterCalendar() {\n    // @ts-expect-error Property '__powerCalendars'\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (window && window.__powerCalendars?.[guidFor(this)]) {\n      // @ts-expect-error Property '__powerCalendars'\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      delete window.__powerCalendars[guidFor(this)];\n\n      // @ts-expect-error Property '__powerCalendars'\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      if (Object.keys(window.__powerCalendars).length === 0) {\n        // @ts-expect-error Property '__powerCalendars'\n        delete window.__powerCalendars;\n      }\n    }\n  }\n}\n"],"names":["PowerCalendarComponent","Component","g","prototype","service","i","void 0","tracked","navComponent","PowerCalendarNavComponent","daysComponent","PowerCalendarDaysComponent","constructor","owner","args","registerCalendar","onInit","publicAPI","willDestroy","unregisterCalendar","publicActions","publicActionsObject","onSelect","select","bind","onCenterChange","changeCenterTask","currentCenter","selected","_selected","normalizeDate","v","center","powerCalendar","getDate","_publicAPI","uniqueId","guidFor","type","_calendarType","loading","isRunning","locale","actions","tagWithDefault","tag","undefined","_buildTask","context","generator","newCenter","calendar","e","assert","value","normalizeCalendarValue","date","day","n","action","window","__powerCalendars","Object","keys","length","setComponentTemplate","TEMPLATE"],"mappings":"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"}